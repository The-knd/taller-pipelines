name: Load SQL Data into PostgreSQL on EC2

on:
  workflow_dispatch:  # Activación manual desde GitHub
  push:
    branches:
      - main           # Activación automática al hacer push a la rama main

jobs:
  load_data:
    runs-on: ubuntu-latest  # El job corre en un runner Linux proporcionado por GitHub

    steps:
    # Paso 1: Clona el repositorio para acceder al archivo DBini.sql
    - name: Checkout repository
      uses: actions/checkout@v3

    # Paso 2: Crear y proteger el archivo temporal con la clave SSH
    - name: Set up SSH key
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > temp_key.pem
        chmod 600 temp_key.pem

    # Paso 3: Copiar archivo SQL desde el repositorio local al sistema EC2
    - name: Copy SQL file to EC2
      env:
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
      run: |
        scp -o StrictHostKeyChecking=no -i temp_key.pem ./sql/DBini.sql $EC2_USER@$EC2_HOST:/tmp/DBini.sql

    # Paso 4: Ejecutar el SQL dentro del contenedor PostgreSQL en EC2
    - name: Execute SQL file in PostgreSQL container
      env:
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      run: |
        ssh -o StrictHostKeyChecking=no -i temp_key.pem $EC2_USER@$EC2_HOST << EOF
          # Copiar el archivo desde el sistema EC2 al contenedor
          docker cp /tmp/DBini.sql postgresql-dev:/tmp/DBini.sql

          # Ejecutar el archivo SQL dentro del contenedor usando psql
          docker exec -i postgresql-dev psql \
            -U ${POSTGRES_USER} \
            -d ${POSTGRES_DB} \
            -f /tmp/DBini.sql
        EOF

    # Paso 5: Limpieza de archivos temporales
    - name: Clean up SSH key and SQL file
      env:
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
      run: |
        # Eliminar archivo temporal de clave SSH
        rm -f temp_key.pem

        # Eliminar archivo SQL de la EC2 para no dejar basura
        ssh -o StrictHostKeyChecking=no -i temp_key.pem $EC2_USER@$EC2_HOST "rm -f /tmp/DBini.sql" || true
